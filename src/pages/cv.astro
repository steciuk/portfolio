---
import ContactItem from "@components/CV/ContactItem.astro";
import ProseEntry from "@components/ui/ProseEntry.astro";
import ThemeSwitcher from "@components/ThemeSwitcher.svelte";
import { formatPeriod } from "@content/utils";
import {
  formatLocation,
  groupEntriesByDataField,
  sortByDate,
} from "@content/utils";
import Layout from "@layouts/Layout.astro";
import { getCollection } from "astro:content";
import { Github, Globe, Linkedin, Mail, MapPin, Phone } from "lucide-svelte";
import GroupSubHeader from "@components/CV/GroupSubHeader.astro";
import SpaceBetween from "@components/CV/SpaceBetween.astro";
import { getEntry } from "astro:content";
import Prose from "@components/ui/Prose.astro";
import Side from "@components/CV/Side.astro";
import Section from "@components/CV/Section.astro";
import { badgesLinks } from "@assets/badges/badgesLinks";
import Link from "@components/ui/Link.astro";

const jobsEntries = await getCollection("jobs");
jobsEntries.sort((a, b) => {
  return sortByDate(b.data.start, a.data.start);
});
const groupedJobs = groupEntriesByDataField<"jobs">(jobsEntries, "group");

const educationEntries = await getCollection("education");
educationEntries.sort((a, b) => {
  return sortByDate(b.data.end, a.data.end);
});
const groupedEducation = groupEntriesByDataField<"education">(
  educationEntries,
  "school"
);

const projectsToShow = [
  "stateviz",
  "freebici",
  "qrnamic",
  "vite-plugin-inline-imports",
  "card-game",
  "quote-shake",
  // "bwt"
] as const;

const projectsEntries = (
  await Promise.all(projectsToShow.map((slug) => getEntry("projects", slug)))
).filter((entry) => !!entry);

const techSkills: Array<{
  group: string;
  skills: Array<keyof typeof badgesLinks>;
}> = [
  {
    group: "Web development",
    skills: [
      "React",
      "Angular",
      "Astro",
      "Svelte",
      "TypeScript",
      "JavaScript",
      "Tailwind CSS",
      "HTML",
      "CSS",
      "Sass",
      "RxJS",
      "Vite",
      "Vitest",
      "Jest",
      "Cypress",
      // "React Native",
      "EJS",
      "Chrome Extensions",
      "Express",
      "Phaser"
    ],
  },
  {
    group: "Data science & analytics",
    skills: [
      "Python",
      "pandas",
      "NumPy",
      "Matplotlib",
      "Seaborn",
      "scikit-learn",
      "Jupyter",
      "NetworkX"
    ],
  },
  {
    group: "Other",
    skills: ["Git", "Gerrit", "Firestore", "MongoDB", "Linux", "Docker"],
  },
];

const skills = [
  ...techSkills,
  {
    group: "Languages",
    skills: ["Polish (native)", "English (fluent)", "Spanish (intermediate)", "Russian (elementary)"],
  },
];

const interests = [
  "Web development",
  "Software architecture",
  "Tech novelties",
  "Alpine skiing",
  "Paragliding",
  "Kitesurfing",
  "Sailing",
  "Hitchhiking",
]
---

<Layout subtitle="CV">
  <div class="no-print">
    <ThemeSwitcher client:only="svelte" />
  </div>
  <div class="page bg-background">
    <header
      class="grid"
      style={{
        gridTemplateColumns: "2fr 1fr",
      }}
    >
      <div class="flex flex-col justify-between">
        <h1 class="text-4xl">Adam Steciuk</h1>
        <p class="text-sm">
          Frontend web developer with over 2 years of professional experience
          and extensive work on personal and university projects. Passionate
          about creating dynamic, user-friendly web applications. Curious and
          ambitious, constantly seeking to enhance my skills and stay updated
          with the latest industry trends.
        </p>
      </div>
      <ul class="flex flex-col items-end">
        <ContactItem>
          <a href="mailto:a.t.steciuk@gmail.com">a.t.steciuk@gmail.com</a>
          <Mail />
        </ContactItem>
        <ContactItem>
          <span>+48 693 296 922</span>
          <Phone />
        </ContactItem>
        <!-- <ContactItem>
          <span>Gdańsk, Poland</span>
          <MapPin />
        </ContactItem> -->
        <ContactItem>
          <a
            href="https://www.linedin.com/in/steciuk"
            target="_blank"
            rel="noopener"
          >
            linedin.com/in/steciuk
          </a>
          <Linkedin />
        </ContactItem>
        <ContactItem>
          <a href="https://github.com/steciuk" target="_blank" rel="noopener">
            github.com/steciuk
          </a>
          <Github />
        </ContactItem>
        <ContactItem>
          <a href="https://steciuk.dev" target="_blank" rel="noopener">
            steciuk.dev
          </a>
          <Globe />
        </ContactItem>
      </ul>
    </header>
    <main class="mt-1 grid grid-cols-2 gap-3">
      <div>
        <Section title="Professional Experience">
          {
            Array.from(groupedJobs).map(([group, jobs]) => (
              <SpaceBetween>
                <GroupSubHeader slot="left">{group}</GroupSubHeader>
                <Side slot="right">
                  {formatLocation(jobs[0].data.location)}
                </Side>
              </SpaceBetween>
              <div>
                {jobs.map((job) => (
                  <SpaceBetween>
                    <h4 class="text-sm italic" slot="left">{job.data.role}</h4>
                    <Side slot="right">
                      {formatPeriod(job.data.start, job.data.end)}
                    </Side>
                  </SpaceBetween>
                  <ProseEntry entry={job} class="text-xs"/>
                ))}
              </div>
            ))
          }
        </Section>
        <Section title="Skills">
          <div class="space-y-1">
            {skills.map(({ group, skills }) => (
              <div>
                <h3 class="mt-1 text-sm">{group}</h3>
                <div class="text-2xs">
                  {skills.join(" ∙ ")}
                </div>
              </div>
            ))}
          </div>
        </Section>
        <Section title="Interests">
          <div class="text-2xs">
            {interests.join(" ∙ ")}
          </div>
        </Section>
      </div>
      <div>
        <Section title="Education">
          {
            Array.from(groupedEducation).map(([group, education]) => (
              <GroupSubHeader>{group}</GroupSubHeader>
              <div class="space-y-1">
                {education.map((entry) => (
                  <div>
                    <SpaceBetween>
                      <h4 class="text-sm italic" slot="left">
                        {entry.data.degree}
                      </h4>
                      <Side slot="right">
                        {formatPeriod(entry.data.start, entry.data.end)}
                      </Side>
                    </SpaceBetween>
                    <Prose class="text-xs prose-li:my-0">
                      <ul>
                        <li>Average grade: {entry.data.grade}/5.00.</li>
                      </ul>
                    </Prose>
                    <ProseEntry entry={entry} class="text-xs prose-li:my-0" />
                  </div>
                ))}
              </div>
            ))
          }
        </Section>
        <Section title="Relevant Projects">
          <p class="text-2xs"slot="right">See other projects at{" "}
              <a href="https://steciuk.dev" target="_blank" rel="noopener" class="underline text-primary">
                steciuk.dev
              </a>
            </span>
          </p>
          {
            projectsEntries.map((entry) => (
              <>
                <h3 class="mt-1 text-sm">{entry.data.name}</h3>
                <ProseEntry entry={entry} class="text-2xs prose-li:my-0" />
                <Prose class="text-2xs prose-li:my-0">
                  <ul>
                    {entry.data.repo && (
                      <li>Repository:{" "}
                        <a
                          href={entry.data.repo}
                          target="_blank"
                          rel="noopener"
                        >{entry.data.repo}</a>.
                      </li>
                    )}
                    {entry.data.deployed && (
                      <li>Avaliable at:{" "}
                        <a
                          href={entry.data.deployed}
                          target="_blank"
                          rel="noopener"
                        >{entry.data.deployed}</a>.
                      </li>
                    )}
                    <li>{entry.data.technology.join(", ")}.</li>
                  </ul>
                </Prose>
              </>
            ))
          }
        </Section>
      </div>
    </main>
  </div>
</Layout>

<style>
  .page {
    width: 21cm;
    height: 29.7cm;
    padding: 0.7cm;
    margin: 1cm auto;
    border: 1px #d3d3d3 solid;
    border-radius: 5px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
  }

  @page {
    size: A4;
    margin: 0;
  }

  @media print {
    .page {
      overflow: hidden;
      margin: 0;
      border: initial;
      border-radius: initial;
      width: initial;
      min-height: initial;
      box-shadow: initial;
      background: initial;
      page-break-after: always;
    }

    .no-print {
      display: none;
    }
  }
</style>
