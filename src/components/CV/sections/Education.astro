---
import GroupSubHeader from '@components/CV/ui/GroupSubHeader.astro';
import Section from '@components/CV/ui/Section.astro';
import Side from '@components/CV/ui/Side.astro';
import SpaceBetween from '@components/CV/ui/SpaceBetween.astro';
import Prose from '@components/ui/Prose.astro';
import Render from '@components/ui/Render.astro';
import {
  sortByDate,
  groupEntriesByDataField,
  formatPeriod,
} from '@content/utils';
import { getCollection } from 'astro:content';

const educationEntries = await getCollection('education');
educationEntries.sort((a, b) => {
  return sortByDate(b.data.periods[0].end, a.data.periods[0].end);
});
const groupedEducation = groupEntriesByDataField<'education'>(
  educationEntries,
  'school'
);
---

<Section title='Education'>
  {
    Array.from(groupedEducation).map(([group, education]) => (
      <>
        <GroupSubHeader>{group}</GroupSubHeader>
        <div class='space-y-1'>
          {education.map((entry) => (
            <div>
              <SpaceBetween>
                <h4 class='text-sm italic' slot='left'>
                  {entry.data.degree}
                </h4>
                <div slot='right'>
                  {entry.data.periods.map((period) => (
                    <Side>{formatPeriod(period.start, period.end, true)}</Side>
                  ))}
                </div>
              </SpaceBetween>
              <Prose class='text-xs a4:prose-li:my-0 print:prose-li:my-0'>
                <ul>
                  <li>Average grade: {entry.data.grade}.</li>
                </ul>
                {entry.data.descriptionReference && (
                  <Render entry={entry.data.descriptionReference.cv} />
                )}
              </Prose>
            </div>
          ))}
        </div>
      </>
    ))
  }
</Section>
