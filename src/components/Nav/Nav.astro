---
import { Button } from "@components/ui/button";
import me from "@assets/me.jpg";
import { Image } from "astro:assets";
import { ArrowRight, Github, Linkedin, Mail } from "lucide-svelte";
import { email, github, linkedin } from "@src/links";
import ThemeSwitcher from "@components/ThemeSwitcher.astro";
import { cn } from "@src/utils";

interface Props {
  class?: string;
  forceBurger?: boolean;
}

const { class: className, forceBurger } = Astro.props;

const links = [
  { href: "/", text: "Home" },
  { href: "/timeline", text: "Timeline" },
  { href: "/cv", text: "CV" },
  { href: "/projects", text: "Projects" },
];

let currentHref = Astro.url.pathname;
if (currentHref !== "/") {
  currentHref = currentHref.replace(/\/$/, "");
}
// TODO: Change the width in the script and in EntryDeselector if main breakpoint changes
---

<div
  class={cn(
    "pointer-events-none fixed left-0 top-0 z-30 h-dvh w-screen flex-shrink-0 overflow-hidden",
    { "lg:sticky lg:w-max": !forceBurger },
    className
  )}
  id="main-nav-container"
  data-nav="closed"
>
  <button
    class={cn(
      "pointer-events-auto absolute inset-0 bg-border/50 backdrop-blur-sm",
      {
        "lg:hidden": !forceBurger,
      }
    )}
    id="close-main-nav-btn"
    aria-label="Close main navigation"></button>
  <aside
    class={cn(
      "pointer-events-auto flex h-full w-56 -translate-x-full flex-col justify-between bg-card px-4 pt-6 text-card-foreground shadow-2xl transition-transform xl:w-72",
      {
        "lg:translate-x-0 lg:border-r lg:shadow-none": !forceBurger,
      }
    )}
  >
    <div class="flex w-full flex-col items-center gap-6">
      <Image
        src={me}
        alt="Adam Steciuk"
        class="aspect-square w-full max-w-40 rounded-full object-cover shadow-lg"
        width={240}
        quality="high"
      />
      <nav class="w-full">
        <ul class="space-y-2">
          {
            links.map(({ href, text }) => (
              <li>
                <Button class="relative w-full" variant="outline" href={href}>
                  {currentHref === href && (
                    <ArrowRight class="absolute right-2" />
                  )}
                  {text}
                </Button>
              </li>
            ))
          }
        </ul>
      </nav>
      <ThemeSwitcher />
    </div>
    <div class="flex justify-center gap-2 pb-2">
      <Button
        href={`mailto:${email}`}
        variant="ghost"
        size="icon"
        aria-label="Email"
        class="text-card-foreground"
      >
        <Mail />
      </Button>
      <Button
        href={github}
        target="_blank"
        variant="ghost"
        size="icon"
        aria-label="GitHub"
        class="text-card-foreground"
      >
        <Github />
      </Button>
      <Button
        href={linkedin}
        target="_blank"
        variant="ghost"
        size="icon"
        aria-label="LinkedIn"
        class="text-card-foreground"
      >
        <Linkedin />
      </Button>
    </div>
  </aside>
</div>

<script>
  import { navOpen } from "@components/Nav/navOpenStore";
  let closeMainNavBtn: HTMLElement | null | undefined;
  let mainNavContainer: HTMLElement | null | undefined;

  document.addEventListener("astro:page-load", () => {
    closeMainNavBtn = document.getElementById("close-main-nav-btn");
    mainNavContainer = document.getElementById("main-nav-container");

    closeMainNavBtn?.addEventListener("click", () => {
      navOpen.set(false);
    });

    navOpen.set(false);
  });

  navOpen.subscribe((isOpen) => {
    if (!mainNavContainer) return;
    const navContainer = mainNavContainer;

    if (isOpen) {
      navContainer.dataset.nav = "open";
    } else {
      if (closeMainNavBtn) {
        navContainer.dataset.nav = "closing";
        closeMainNavBtn.addEventListener(
          "animationend",
          () => {
            navContainer.dataset.nav = "closed";
          },
          { once: true }
        );
      } else {
        navContainer.dataset.nav = "closed";
      }
    }
  });

  window.addEventListener("keydown", (event) => {
    if (event.key === "Escape" && navOpen.get() && window.innerWidth < 1024) {
      event.stopImmediatePropagation();
      navOpen.set(false);
    }
  });

  document.addEventListener("astro:before-swap", (event) => {
    const newNavContainer =
      event.newDocument.getElementById("main-nav-container");

    if (newNavContainer) {
      if (navOpen.get()) {
        newNavContainer.dataset.nav = "open";
        navOpen.set(true);
      } else {
        newNavContainer.dataset.nav = "closed";
        navOpen.set(false);
      }
    } else {
      navOpen.set(false);
    }
  });
</script>

<style lang="scss">
  #close-main-nav-btn {
    animation: fadeIn 0.3s forwards;
  }

  #main-nav-container[data-nav="closed"] {
    #close-main-nav-btn {
      display: none;
    }
  }

  #main-nav-container[data-nav="closing"] {
    #close-main-nav-btn {
      animation: fadeOut 0.3s forwards;
    }
  }

  #main-nav-container[data-nav="open"] {
    aside {
      transform: translateX(0);
    }
  }

  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
</style>
