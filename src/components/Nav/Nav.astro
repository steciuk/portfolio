---
import ThemeSwitcher from "@components/ThemeSwitcher.svelte";
import { Button } from "@components/ui/button";
import me from "@assets/me.jpg";
import { Image } from "astro:assets";
import { Github, Linkedin, Mail } from "lucide-svelte";
import { email, github, linkedin } from "@src/links";

const links = [
  { href: "/", text: "Home" },
  { href: "/cv", text: "CV" },
  { href: "/projects", text: "Projects" },
];

const isCv = Astro.url.pathname === "/cv";

// TODO: Change the width in the script and in EntryDeselector if main breakpoint changes
---

<div
  class="pointer-events-none fixed left-0 top-0 z-30 h-dvh w-screen flex-shrink-0 overflow-hidden lg:sticky lg:w-max"
  class:list={{ "print:hidden": isCv }}
  id="main-nav-container"
  data-nav="closed"
>
  <button
    class="pointer-events-auto absolute inset-0 bg-border/50 backdrop-blur-sm lg:hidden"
    id="close-main-nav-btn"
    aria-label="Close main navigation"></button>
  <aside
    class="pointer-events-auto flex h-full w-56 -translate-x-full flex-col justify-between bg-card px-4 pt-6 text-card-foreground shadow-2xl transition-transform lg:translate-x-0 lg:border-r lg:shadow-none xl:w-72"
  >
    <div class="flex w-full flex-col items-center gap-6">
      <Image
        src={me}
        alt="Adam Steciuk"
        class="aspect-square w-full max-w-40 rounded-full object-cover shadow-sm"
        width={240}
        quality="high"
      />
      <nav class="w-full">
        <ul class="space-y-2">
          {
            links.map(({ href, text }) => (
              <li>
                <Button class="w-full" variant="outline" href={href}>
                  {text}
                </Button>
              </li>
            ))
          }
        </ul>
      </nav>
      <ThemeSwitcher client:idle />
    </div>
    <div class="flex justify-center gap-2 pb-2">
      <Button
        href={`mailto:${email}`}
        variant="link"
        size="icon"
        aria-label="Email"
        class="text-card-foreground"
      >
        <Mail />
      </Button>
      <Button
        href={github}
        target="_blank"
        variant="link"
        size="icon"
        aria-label="GitHub"
        class="text-card-foreground"
      >
        <Github />
      </Button>
      <Button
        href={linkedin}
        target="_blank"
        variant="link"
        size="icon"
        aria-label="LinkedIn"
        class="text-card-foreground"
      >
        <Linkedin />
      </Button>
    </div>
  </aside>
</div>

<style lang="scss">
  #close-main-nav-btn {
    animation: fadeIn 0.3s forwards;
  }

  #main-nav-container[data-nav="closed"] {
    #close-main-nav-btn {
      display: none;
    }
  }

  #main-nav-container[data-nav="closing"] {
    #close-main-nav-btn {
      animation: fadeOut 0.3s forwards;
    }
  }

  #main-nav-container[data-nav="open"] {
    aside {
      transform: translateX(0);
    }
  }

  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
</style>

<script>
  import { navOpen } from "@components/Nav/navOpenStore";
  const closeMainNavBtn = document.getElementById("close-main-nav-btn");
  const mainNavContainer = document.getElementById("main-nav-container");

  if (closeMainNavBtn) {
    closeMainNavBtn.addEventListener("click", () => {
      navOpen.set(false);
    });
  }

  if (mainNavContainer) {
    navOpen.subscribe((isOpen) => {
      if (isOpen) {
        mainNavContainer.dataset.nav = "open";
      } else {
        if (closeMainNavBtn) {
          mainNavContainer.dataset.nav = "closing";
          closeMainNavBtn.addEventListener(
            "animationend",
            () => {
              mainNavContainer.dataset.nav = "closed";
            },
            { once: true }
          );
        } else {
          mainNavContainer.dataset.nav = "closed";
        }
      }
    });
  }

  window.addEventListener("keydown", (event) => {
    if (event.key === "Escape" && navOpen.get() && window.innerWidth < 1024) {
      navOpen.set(false);
    }
  });
</script>
