---
import EntryRole from '@components/Timeline/EntryDetails/EntryRole.astro';
import { formatPeriod } from '@content/utils';
import type { TimelineableEntry } from '@components/Timeline/types';
import EntryCard from '@components/EntryCard/EntryCard.astro';
import ProjectCard from '@components/EntryCard/ProjectCard.astro';
import EntryTitle from '@components/EntryCard/EntryTitle.astro';
import Render from '@components/ui/Render.astro';
import EntryDetailsProse from '@components/Timeline/EntryDetails/EntryDetailsProse.astro';

interface Props {
  entry: TimelineableEntry;
  class?: string;
}

const { entry, class: className } = Astro.props;
---

{
  entry.collection === 'education' ? (
    <EntryCard image={entry.data.logo} isTimeline={true} class={className}>
      <EntryTitle>{entry.data.school}</EntryTitle>
      <p class='text-balance font-bold md:text-lg'>{entry.data.faculty}</p>
      <EntryRole
        role={entry.data.degree}
        periods={entry.data.periods}
        class='mb-3'
      />
      <EntryDetailsProse>
        <ul>
          <li>Average grade: {entry.data.grade}.</li>
          {entry.data.descriptionReference && (
            <li>
              <Render entry={entry.data.descriptionReference.page} />
            </li>
          )}
        </ul>
      </EntryDetailsProse>
    </EntryCard>
  ) : entry.collection === 'jobs' ? (
    <EntryCard image={entry.data.logo} isTimeline={true} class={className}>
      <EntryTitle>{entry.data.company}</EntryTitle>
      <EntryRole
        role={entry.data.role}
        periods={entry.data.periods}
        class='mb-3'
      />
      <EntryDetailsProse>
        <Render entry={entry.data.descriptionReference.page} />
      </EntryDetailsProse>
    </EntryCard>
  ) : entry.collection === 'projects' ? (
    <ProjectCard entry={entry} isTimeline={true} class={className} />
  ) : (
    (() => {
      throw new Error('Invalid entry collection');
    })()
  )
}
