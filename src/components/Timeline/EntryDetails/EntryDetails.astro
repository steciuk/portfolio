---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import EntryTitle from "@components/Timeline/EntryDetails/EntryTitle.astro";
import EntrySubtitle from "@components/Timeline/EntryDetails/EntrySubtitle.astro";
import EntryRole from "@components/Timeline/EntryDetails/EntryRole.astro";
import { formatPeriod } from "@content/utils";
import { Button } from "@components/ui/button";

interface Props {
  entry: CollectionEntry<"education" | "jobs" | "projects">;
}

const { entry } = Astro.props;
let dateString = formatPeriod(entry.data.start, entry.data.end);
---

<div class="min-w-max p-2 text-left">
  {
    entry.collection === "education" ? (
      <>
        <EntryTitle>{entry.data.school}</EntryTitle>
        <EntrySubtitle>{entry.data.faculty}</EntrySubtitle>
        <EntryRole role={entry.data.degree} dateString={dateString} />
        <Image
          src={entry.data.logo}
          alt={`${entry.data.school} logo`}
          quality="low"
          class="p-2"
          width={56}
          class="w-14"
        />
      </>
    ) : entry.collection === "jobs" ? (
      <>
        <EntryTitle>{entry.data.company}</EntryTitle>
        <EntryRole role={entry.data.role} dateString={dateString} />
        <Image
          src={entry.data.logo}
          alt={`${entry.data.company} logo`}
          quality="low"
          width={56}
          class="w-14"
        />
      </>
    ) : entry.collection === "projects" ? (
      <>
        <EntryTitle>{entry.data.name}</EntryTitle>
        <div class="flex flex-col">
          {entry.data.repo && (
            <Button
              href={entry.data.repo}
              target="_blank"
              variant="link"
              size="inline"
            >
              {entry.data.repo}
            </Button>
          )}
          {entry.data.deployed && (
            <Button
              href={entry.data.deployed}
              target="_blank"
              variant="link"
              size="inline"
            >
              {entry.data.deployed}
            </Button>
          )}
        </div>
        <EntrySubtitle>{entry.data.technology.join(", ")}</EntrySubtitle>
      </>
    ) : (
      (() => {
        throw new Error("Invalid entry collection");
      })()
    )
  }
</div>
